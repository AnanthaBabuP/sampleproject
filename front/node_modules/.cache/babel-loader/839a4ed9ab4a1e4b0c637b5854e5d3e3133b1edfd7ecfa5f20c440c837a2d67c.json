{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullSetProject\\\\SampleProject\\\\front\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\nimport CarForm from './components/CarForm';\nimport axios from 'axios';\nimport './App.css';\nimport SecondTable from './components/SecondTable';\nimport ThirdTable from './components/ThirdTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = \"http://localhost:8081\";\nfunction Home() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [pendingCars, setPendingCars] = useState([]);\n  const navigate = useNavigate(); // Initialize the navigate hook\n\n  useEffect(() => {\n    // // Fetch all cars from the backend\n    // axios.get('/api/cars')\n    //     .then(response => {\n    //         setCars(response.data);\n    //     })\n    //     .catch(error => {\n    //         console.error('There was an error fetching the cars!', error);\n    //     });\n  }, []);\n  const handleAddCar = car => {\n    setPendingCars([...pendingCars, car]);\n  };\n  const handleDelete = index => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this car?\");\n    if (confirmDelete) {\n      const updatedPendingCars = pendingCars.filter((_, i) => i !== index);\n      setPendingCars(updatedPendingCars);\n    }\n  };\n  const handleDeleteCars = index => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this car?\");\n    if (confirmDelete) {\n      const updatedCars = cars.filter((_, i) => i !== index);\n      setCars(updatedCars);\n    }\n  };\n  const handleUpdateCar = index => {\n    const carToUpdate = pendingCars[index];\n    setCars([...cars, carToUpdate]);\n\n    // Remove the car from pendingCars\n    const updatedPendingCars = pendingCars.filter((_, i) => i !== index);\n    setPendingCars(updatedPendingCars);\n  };\n  const handleUpdateCars = (index, field, value) => {\n    const updatedCars = cars.map((car, i) => i === index ? {\n      ...car,\n      [field]: value\n    } : car);\n    setCars(updatedCars);\n  };\n  const handleRegister = () => {\n    const invalidCars = cars.filter(car => {\n      return !car.name || !car.model || car.basicAmount <= 0 || car.tax < 0 || car.maxAmount <= 0;\n    });\n    if (invalidCars.length > 0) {\n      alert(\"Some car details are invalid. Please ensure all fields are filled correctly.\");\n      return;\n    }\n    console.log(...cars);\n\n    // axios.post(\"/api/cars\", cars, {\n    //     headers: {\n    //         \"Content-Type\": \"application/json\"\n    //     }\n    // })\n    //     .then((response) => {\n    //         if (response.status === 201) {\n    //             console.log(\"Cars registered successfully:\", response.data);\n    //             setPendingCars([]);  // Clear the pending cars after successful registration\n    //             setCars([...cars, ...response.data]);  // Assuming response contains the newly registered cars\n    //             alert(\"Cars registered successfully!\");\n\n    //             navigate('/list');  // This will redirect the user to /list\n    //         } else {\n    //             alert(\"Failed to register cars. Please try again.\");\n    //         }\n    //     })\n    //     .catch((error) => {\n    //         console.error(\"Error during registration:\", error);\n    //         alert(\"Error: \" + (error.message || error));\n    //     });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Car Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CarForm, {\n      onAddCar: handleAddCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SecondTable, {\n      pendingCars: pendingCars,\n      onDelete: handleDelete,\n      onUpdate: handleUpdateCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ThirdTable, {\n      cars: cars,\n      onDelete: handleDeleteCars,\n      onUpdate: handleUpdateCars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), (cars === null || cars === void 0 ? void 0 : cars.length) > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"ygyAhXGYEUmdP2eTJ9s7H9LqHHg=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CarForm","axios","SecondTable","ThirdTable","jsxDEV","_jsxDEV","Fragment","_Fragment","defaults","baseURL","Home","_s","cars","setCars","pendingCars","setPendingCars","navigate","handleAddCar","car","handleDelete","index","confirmDelete","window","confirm","updatedPendingCars","filter","_","i","handleDeleteCars","updatedCars","handleUpdateCar","carToUpdate","handleUpdateCars","field","value","map","handleRegister","invalidCars","name","model","basicAmount","tax","maxAmount","length","alert","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddCar","onDelete","onUpdate","type","onClick","_c","$RefreshReg$"],"sources":["D:/FullSetProject/SampleProject/front/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\r\nimport CarForm from './components/CarForm';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport SecondTable from './components/SecondTable';\r\nimport ThirdTable from './components/ThirdTable';\r\n\r\naxios.defaults.baseURL = \"http://localhost:8081\";\r\n\r\nfunction Home() {\r\n    const [cars, setCars] = useState([]);\r\n    const [pendingCars, setPendingCars] = useState([]);\r\n    const navigate = useNavigate(); // Initialize the navigate hook\r\n\r\n    useEffect(() => {\r\n        // // Fetch all cars from the backend\r\n        // axios.get('/api/cars')\r\n        //     .then(response => {\r\n        //         setCars(response.data);\r\n        //     })\r\n        //     .catch(error => {\r\n        //         console.error('There was an error fetching the cars!', error);\r\n        //     });\r\n    }, []);\r\n\r\n    const handleAddCar = (car) => {\r\n        setPendingCars([...pendingCars, car]);\r\n    };\r\n\r\n    const handleDelete = (index) => {\r\n        const confirmDelete = window.confirm(\"Are you sure you want to delete this car?\");\r\n        if (confirmDelete) {\r\n            const updatedPendingCars = pendingCars.filter((_, i) => i !== index);\r\n            setPendingCars(updatedPendingCars);\r\n        }\r\n    };\r\n\r\n    const handleDeleteCars = (index) => {\r\n        const confirmDelete = window.confirm(\"Are you sure you want to delete this car?\");\r\n        if (confirmDelete) {\r\n            const updatedCars = cars.filter((_, i) => i !== index);\r\n            setCars(updatedCars);\r\n        }\r\n    };\r\n\r\n    const handleUpdateCar = (index) => {\r\n        const carToUpdate = pendingCars[index];\r\n\r\n        setCars([...cars, carToUpdate]);\r\n\r\n        // Remove the car from pendingCars\r\n        const updatedPendingCars = pendingCars.filter((_, i) => i !== index);\r\n        setPendingCars(updatedPendingCars);\r\n    };\r\n\r\n    const handleUpdateCars = (index, field, value) => {\r\n        const updatedCars = cars.map((car, i) =>\r\n            i === index ? { ...car, [field]: value } : car\r\n        );\r\n        setCars(updatedCars);\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        const invalidCars = cars.filter((car) => {\r\n            return (\r\n                !car.name || \r\n                !car.model || \r\n                car.basicAmount <= 0 || \r\n                car.tax < 0 || \r\n                car.maxAmount <= 0\r\n            );\r\n        });\r\n        \r\n        if (invalidCars.length > 0) {\r\n            alert(\"Some car details are invalid. Please ensure all fields are filled correctly.\");\r\n            return;\r\n        }\r\n        console.log(...cars)\r\n\r\n        // axios.post(\"/api/cars\", cars, {\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\"\r\n        //     }\r\n        // })\r\n        //     .then((response) => {\r\n        //         if (response.status === 201) {\r\n        //             console.log(\"Cars registered successfully:\", response.data);\r\n        //             setPendingCars([]);  // Clear the pending cars after successful registration\r\n        //             setCars([...cars, ...response.data]);  // Assuming response contains the newly registered cars\r\n        //             alert(\"Cars registered successfully!\");\r\n\r\n        //             navigate('/list');  // This will redirect the user to /list\r\n        //         } else {\r\n        //             alert(\"Failed to register cars. Please try again.\");\r\n        //         }\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.error(\"Error during registration:\", error);\r\n        //         alert(\"Error: \" + (error.message || error));\r\n        //     });\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Car Registration</h1>\r\n            <CarForm onAddCar={handleAddCar} />\r\n\r\n            <SecondTable\r\n                pendingCars={pendingCars}\r\n                onDelete={handleDelete}\r\n                onUpdate={handleUpdateCar}\r\n            />\r\n\r\n\r\n            <ThirdTable\r\n                cars={cars}\r\n                onDelete={handleDeleteCars}\r\n                onUpdate={handleUpdateCars}\r\n            />\r\n            {cars?.length > 0 && (\r\n                <>\r\n                    <button type='button' onClick={handleRegister}>\r\n                        Register\r\n                    </button>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}